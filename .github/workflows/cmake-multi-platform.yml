name: CMake build on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: fedora:latest
    strategy:
      fail-fast: false
      matrix:
        target: [native, windows]
        build_type: [Release]
        include:
          - target: native
            c_compiler: gcc
            cpp_compiler: g++
          - target: windows
            c_compiler: mingw64-gcc
            cpp_compiler: mingw64-g++

    steps:
    - uses: actions/checkout@v4

    # Install dependencies on Fedora for native build
    - name: Install dependencies (Fedora - Native)
      if: matrix.target == 'native'
      run: |
        sudo dnf -q -y install gcc gcc-c++ cmake make \
          pkgconfig(openal) pkgconfig(sdl2) pkgconfig(glu) \
          pkgconfig(libpng) pkgconfig(libjpeg) pkgconfig(vorbis) \
          pkgconfig(vorbisfile) pkgconfig(ogg) pkgconfig(jsoncpp)

    # Install dependencies on Fedora for cross-compiling to Windows
    - name: Install dependencies (Fedora - Windows)
      if: matrix.target == 'windows'
      run: |
        sudo dnf -q -y install mingw64-gcc mingw64-gcc-c++ mingw64-binutils mingw64-headers \
          mingw64-libjpeg-turbo mingw64-libpng mingw64-SDL2 mingw64-libvorbis mingw64-libogg mingw64-openal-soft mingw64-jsoncpp

    # Set reusable strings
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    # Configure CMake for native build
    - name: Configure CMake (Fedora - Native)
      if: matrix.target == 'native'
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DINCLUDE_DIRECTORIES=${{ github.workspace }}/external \
          -S ${{ github.workspace }}

    # Configure CMake for cross-compiling to Windows
    - name: Configure CMake (Fedora - Windows)
      if: matrix.target == 'windows'
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_SYSTEM_NAME=Windows \
          -DCMAKE_TOOLCHAIN_FILE=/usr/share/mingw/toolchain-mingw64.cmake \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DINCLUDE_DIRECTORIES=${{ github.workspace }}/external \
          -S ${{ github.workspace }}

    # Build
    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    # Test
    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
